# üê≥ Docker Compose - NestJS Development with 1Password
# Ambiente id√©ntico a producci√≥n para detectar problemas temprano

services:
  # ================================
  # Desarrollo Local con 1Password
  # ================================
  nestjs-dev:
    build:
      context: .
      target: development
      args:
        - OP_SERVICE_ACCOUNT_TOKEN=${OP_SERVICE_ACCOUNT_TOKEN:-}
        - RAILWAY_ENVIRONMENT=development
    container_name: nestjs-stripe-dev
    restart: unless-stopped
    ports:
      - "3000:3000"      # Aplicaci√≥n
      - "9229:9229"      # Debug port
    environment:
      - NODE_ENV=development
      - PORT=3000
      - OP_SERVICE_ACCOUNT_TOKEN=${OP_SERVICE_ACCOUNT_TOKEN:-}
      - RAILWAY_ENVIRONMENT=development
    volumes:
      # Hot reload: montar c√≥digo fuente
      - .:/app
      - /app/node_modules
      - ./logs:/app/logs
    networks:
      - nestjs-network
    stdin_open: true
    tty: true

networks:
  nestjs-network:
    driver: bridge

# ================================
# üöÄ Comandos √∫tiles:
# ================================
# 
# Desarrollo con hot reload:
# docker-compose up
#
# Rebuild completo:
# docker-compose up --build
#
# Solo build:
# docker-compose build
#
# Logs en tiempo real:
# docker-compose logs -f
#
# Ejecutar comandos:
# docker-compose exec nestjs-dev pnpm run test
# docker-compose exec nestjs-dev bash
#
# Limpiar todo:
# docker-compose down --volumes --rmi all 