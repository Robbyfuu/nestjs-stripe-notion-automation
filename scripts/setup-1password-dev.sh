#!/bin/bash

# üîê Script para configurar credenciales de DESARROLLO en 1Password
# Este script configura las entradas espec√≠ficas para el ambiente de desarrollo/test

set -e

echo "üîê Configurando credenciales de DESARROLLO en 1Password..."
echo ""

# Verificar que 1Password CLI est√© instalado
if ! command -v op &> /dev/null; then
    echo "‚ùå Error: 1Password CLI no est√° instalado"
    echo "üí° Instalar con: brew install --cask 1password/tap/1password-cli"
    exit 1
fi

# Verificar que est√© autenticado
if ! op account list &> /dev/null; then
    echo "üîë Iniciando sesi√≥n en 1Password..."
    eval $(op signin)
fi

echo "üìù Las credenciales de desarrollo son SEPARADAS de producci√≥n."
echo "üí° Usa claves de TEST de Stripe (empiezan con 'sk_test_')"
echo ""

# 1. Stripe API Key para Development
echo "1Ô∏è‚É£ Configurando Stripe API Key de DESARROLLO..."
echo "   üí° Ve a: https://dashboard.stripe.com/test/apikeys"
echo "   üìã Copia tu 'Secret key' de TEST (empieza con 'sk_test_')"
echo ""
read -p "üîë Ingresa tu Stripe API Key de TEST: " stripe_api_key

if [[ ! $stripe_api_key =~ ^sk_test_ ]]; then
    echo "‚ö†Ô∏è  Advertencia: La clave no parece ser de TEST (no empieza con 'sk_test_')"
    read -p "¬øContinuar de todos modos? (y/N): " confirm
    if [[ $confirm != [yY] ]]; then
        echo "‚ùå Cancelado por el usuario"
        exit 1
    fi
fi

# Crear entrada para Stripe API (Development)
if op item get "NestJS Stripe API" &>/dev/null; then
    echo "‚úèÔ∏è  Actualizando entrada existente..."
    op item edit "NestJS Stripe API" "Secret Key[password]"="$stripe_api_key"
else
    echo "üÜï Creando nueva entrada..."
    op item create \
        --category "API Credential" \
        --title "NestJS Stripe API" \
        "Secret Key[password]"="$stripe_api_key" \
        --tags "nestjs,stripe,development"
fi

echo "‚úÖ Stripe API Key configurada"
echo ""

# 2. Stripe Webhook Secret para Development
echo "2Ô∏è‚É£ Configurando Stripe Webhook Secret de DESARROLLO..."
echo "   üí° Si usas 'stripe listen', el secret se genera autom√°ticamente"
echo "   üìã Para webhooks locales, usa: whsec_..."
echo ""
read -p "üîë Ingresa tu Stripe Webhook Secret de DESARROLLO: " webhook_secret

# Crear entrada para Stripe Webhook (Development)
if op item get "NestJS Stripe Webhook" &>/dev/null; then
    echo "‚úèÔ∏è  Actualizando entrada existente..."
    op item edit "NestJS Stripe Webhook" "Webhook Secret[password]"="$webhook_secret"
else
    echo "üÜï Creando nueva entrada..."
    op item create \
        --category "API Credential" \
        --title "NestJS Stripe Webhook" \
        "Webhook Secret[password]"="$webhook_secret" \
        --tags "nestjs,stripe,webhook,development"
fi

echo "‚úÖ Stripe Webhook Secret configurado"
echo ""

# 3. Bases de datos de Notion para Development
echo "3Ô∏è‚É£ Configurando bases de datos de Notion para DESARROLLO..."
echo "   üí° Usa bases de datos SEPARADAS para desarrollo"
echo "   üìã Formato: 32 caracteres hexadecimales"
echo ""

read -p "üóÑÔ∏è  Database ID de CLIENTES (development): " clients_db_dev
read -p "üí∞ Database ID de PAGOS (development): " payments_db_dev

# Crear entrada para Notion Databases (Development)
if op item get "NestJS Notion Databases" &>/dev/null; then
    echo "‚úèÔ∏è  Actualizando entrada existente..."
    op item edit "NestJS Notion Databases" \
        "Clients Database ID[text]"="$clients_db_dev" \
        "Payments Database ID[text]"="$payments_db_dev"
else
    echo "üÜï Creando nueva entrada..."
    op item create \
        --category "Database" \
        --title "NestJS Notion Databases" \
        "Clients Database ID[text]"="$clients_db_dev" \
        "Payments Database ID[text]"="$payments_db_dev" \
        --tags "nestjs,notion,development"
fi

echo "‚úÖ Bases de datos de Notion configuradas"
echo ""

# Verificaci√≥n final
echo "üîç Verificando configuraci√≥n..."

# Test de lectura de variables
stripe_key=$(op item get "NestJS Stripe API" --field "Secret Key" --reveal 2>/dev/null || echo "ERROR")
webhook_secret=$(op item get "NestJS Stripe Webhook" --field "Webhook Secret" --reveal 2>/dev/null || echo "ERROR")
clients_db=$(op item get "NestJS Notion Databases" --field "Clients Database ID" 2>/dev/null || echo "ERROR")
payments_db=$(op item get "NestJS Notion Databases" --field "Payments Database ID" 2>/dev/null || echo "ERROR")

if [[ $stripe_key == "ERROR" || $webhook_secret == "ERROR" || $clients_db == "ERROR" || $payments_db == "ERROR" ]]; then
    echo "‚ùå Error en la verificaci√≥n. Algunas credenciales no se pudieron leer."
    exit 1
fi

echo "‚úÖ Todas las credenciales de DESARROLLO est√°n configuradas correctamente"
echo ""
echo "üéØ Pr√≥ximos pasos:"
echo "   1. Configura las bases de datos en Notion seg√∫n docs/NOTION-SETUP.md"
echo "   2. Ejecuta: pnpm run dev (para desarrollo local)"
echo "   3. Para configurar PRODUCCI√ìN: ./scripts/setup-1password-prod.sh"
echo "" 